---
title: "US Mass Transit"
author: Ngo Le Duy Anh
format: 
  dashboard:
    theme: 
      - cosmo
      - cosmo.scss
engine: knitr
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(ggplot2)
library(patchwork)
library(ggcorrplot)
library(modelsummary)
library(dotwhisker)
library(gapminder)
library(scales)
gocdata = readRDS(file = "data_cleaned_ver2/ver2_cleaned_data.rds")
```

```{r}
#| include: false
names(gocdata)
```

```{r}
#| label: set customed color
#| include: false
orange = "#D45C31"
red = "#D43157"
blue= "#31A9D4"
green= "#31D45C"
yellow= "#D4AE31"
pink = "#D431A9"
boldblue = "#5C31D4"
```

# 🚌 Route Bus

## Row - The 4 value boxes {height="30%"}

### Column - peak bus ridership {width="25%"}

```{r}
#| label: peak bus ridership
#| include: false

peak_bus_ridership <- gocdata$ridership_year %>% 
  filter(year < 2020 & ridership_category == "ridership_route.bus") %>% 
  summarise(max_ridership = max(ridership_value)) %>% 
  pull(max_ridership)
# reformat peak_bus_ridership
formatted_peak_bus <- label_number(
  accuracy = 0.1, 
  scale_cut = cut_si(""))(peak_bus_ridership)
formatted_peak_bus
```

```{r}
#| content: valuebox
#| title: "Pre-COVID peak (trips)"
list(
  icon = "graph-up-arrow",
  color = "success",
  value = formatted_peak_bus
)
```

### Column - trough bus ridership {width="25%"}

```{r}
#| label: trough bus ridership
#| include: false

min_bus_ridership <- gocdata$ridership_year %>% 
  filter(year >= 2020 & ridership_category == "ridership_route.bus") %>% 
  summarise(min_ridership = min(ridership_value)) %>% 
  pull(min_ridership)
# reformat peak_bus_ridership
formatted_min_bus <- label_number(
  accuracy = 0.1, 
  scale_cut = cut_si(""))(min_bus_ridership)
formatted_min_bus
```

```{r}
#| content: valuebox
#| title: "The COVID trough (trips)"
list(
  icon = "graph-down-arrow",
  color = "warning",
  value = formatted_min_bus
)
```

### Column - bus percent changed {width="25%"}

```{r}
#| label: percent changed
#| include: false

bus_drop <- round(((peak_bus_ridership-min_bus_ridership)/peak_bus_ridership)*100,2) 
percent_bus_drop <- paste0(bus_drop,"%")
percent_bus_drop
```

```{r}
#| content: valuebox
#| title: "Drop (%)"

list(
  icon = "chevron-double-down",
  color = "primary",
  value = percent_bus_drop
)
```

### Column - bus recovery status {width="25%"}

```{r}
#| label: bus recovery status
#| include: false

bus_recovery <- gocdata$ridership_year %>% 
  filter(year==2022 & ridership_category=="ridership_route.bus") %>% 
  summarise(bus_2022 = ridership_value) %>% 
  pull(bus_2022)
# reformat bus_recovery
formatted_bus_recovery <- label_number(
  accuracy = 0.1, 
  scale_cut = cut_si(""))(bus_recovery)
formatted_bus_recovery
```

```{r}
#| content: valuebox
#| title: "Recovery Status (2022)"

list(
  icon = "bandaid",
  color = "info",
  value = formatted_bus_recovery
)
```

## Row - 4 plots {height="70%"}

### Column - Line and point plots {width="40%"}

#### Row - line plot

```{r}
#| fig-align: center
#| fig-asp: 0.33
#| fig-dpi: 300
#| fig-height: 4
#| fig-width: 12
#| out-width: 100%
#| title: Average ridership of mass transit modes

public_transit_trend <- gocdata$ridership_year %>% 
  
  # set specification of chart
  ggplot(aes(y= ridership_value, x=year, colour=ridership_category, shape = ridership_category))+
  geom_line(linewidth=1.5)+
  geom_point(size=5)+
  scale_x_continuous(breaks= seq(2005,2022,by=1))+
  scale_y_continuous(labels = number_format(big.mark = ",", decimal.mark = ".", scale = 1e-6, suffix = "M"))+
  
  # custom theme
  theme_classic(base_size = 18) +
  theme(
    panel.background = element_rect(fill = "#fff3d4", colour = NA),
    plot.background = element_rect(fill = "#fff3d4", colour = NA),
    #plot.title = element_text(size = 20, hjust = 0.5, face = "bold"),
    #plot.subtitle = element_text(size = 10, hjust = 0.5, face = "italic")
    axis.text = element_text(face="bold") )+
  
  # custom line of chart
  scale_color_manual(values= c(ridership_other.modes = "#D43157",
                               ridership_route.bus = "#D45C31",
                               ridership_urban.rail = "#31A9D4"))+
  scale_shape_manual(values = c(15,17,19))+
  
  # Custom labels on lines instead of legend
  annotate("text", x = 2005, y = 490e6, label = "Route Bus", color = "#D45C31") +
  annotate("text", x = 2005, y = 370e6, label = "Urban Rail", color = "#31A9D4") +
  annotate("text", x = 2005.2, y = 35e6, label = "Other Modes", color = "#D43157") +
  
  # Custom outstanding values (2020 values)
  annotate("text", x = 2020.4, y = 232e6, label = "207.9M", color = "#D45C31") +
  annotate("text", x = 2020, y = 137e6, label = " 157.5M", color = "#31A9D4") +
  
  # remove legends
  guides(color="none",shape="none")+
  
  # custom labels
  labs(
    x="", y="",
    #subtitle="Ridership (Million Trips)"
  )
public_transit_trend
```

#### Row - point plot - BUS

```{r}
#| label: scatter plot bus
#| fig-align: center
#| fig-asp: 0.33
#| fig-dpi: 300
#| fig-height: 4
#| fig-width: 12
#| title: "Bus Ridership & Spending correlation by Period"
ggplot(gocdata$df_trans, aes(y = `Ridership.route_bus`, x = `Spending.mass_transit`, colour = period))+
  geom_point(size = 3)+
  scale_color_manual(values = c("before COVID" = blue,"after COVID" = red))+
  # Scale x to Million (Million)
  scale_x_continuous(labels = label_number(scale = 1e-6, suffix = "M"))+
  # Scale y axis to (Million)
  scale_y_continuous(labels = label_number(scale = 1e-6, suffix = "M"))+
  labs(#title= "Bus Ridership & Spending correlation by Period",
       x = "Spending",
       y = "Route Bus Ridership",
       color = "Period")+
  theme_minimal(base_size = 14)+
  theme(
    title = element_text(size =20, face = "bold"),
    axis.title  = element_text(size = 18, face = "bold"),
    axis.text   = element_text(size = 16),
    legend.text = element_text(size = 16),
    legend.title= element_blank(),
    panel.background = element_rect(fill = "#fff3d4", colour = NA),
    plot.background = element_rect(fill = "#fff3d4", colour = NA),
    panel.grid.major = element_line(color = "grey70", size = 0.6), # grid chính
    panel.grid.minor = element_line(color = "grey85", size = 0.3))  # grid phụ
```

### Column - Heatmap and Coefficient plot {width="60%"}

#### Row - For setting only {height="100%"}

##### Column - Heatmap - BUS {width = 50%}

```{r}
#| label: correlation heatmap bus
#| fig-dpi: 300
#| fig-asp: 1
#| fig-bg: "#fff3d4"
#| fig-height: 12
#| fig-width: 12
#| out-width: 100%
#| out-height: 100%
#| title: "Correlation heatmap"

# set heat map of bus
cor_bus <- cor(gocdata$df_quar_bus[ ,-1])
heatmap_bus <- ggcorrplot(cor_bus,lab = TRUE, type="lower", 
                          #title = "Correlation heatmap (Route Bus)",
                          colors = c(boldblue, "white", orange),
                          lab_size = 9)+
  theme(
        #plot.title = element_text(size = 28, face = "bold", hjust = 2, vjust = -1), 
        #axis.title = element_text(size = 18),   
        axis.text = element_text(face="bold"),
        axis.text.x = element_text(size = 24.2, angle = 45, hjust = 1, vjust = 1),  # Chỉnh nhãn trục X
        axis.text.y = element_text(size = 26), # Chỉnh nhãn trục Y
        legend.text = element_text(size = 14), # Tăng cỡ chữ của legend
        legend.position = "bottom",           # Đặt legend xuống dưới cùng
        legend.key.size = unit(1, "cm"),
                 
        panel.background = element_rect(fill = "#fff3d4", colour = NA),
        plot.background = element_rect(fill = "#fff3d4", colour = NA)
        )  # grid phụ

heatmap_bus
```

##### Column - coefficient plot - BUS {width="50%"}

```{r}
#| label: coefficient plot
#| fig-asp: 1.2
#| fig-dpi: 300
#| fig-height: 10
#| fig-width: 12
#| out-width: 100%
#| title: "Influential Factors on Ridership (Pre-COVID)"

# Scale variables for BUS
scaled_bus_data <- gocdata$df_quar_bus[ ,-1] %>%
  mutate(across(everything(), .fns = scale))

# run model again after scaling x variables
x <- lm(route_bus~. ,data = scaled_bus_data)

# coefficient plot
dwplot(x,
  dot_args     = list(size = 6, alpha = 1),   # to chấm
  whisker_args = list(size = 2.5, alpha = 1),   # dày CI
  dodge_size   = 0.6                            # tách các model cho đỡ dính
  ) +
  scale_color_manual(values = orange, guide = "none") +
  geom_vline(xintercept = 0, linetype = "dashed", color = boldblue,linewidth = 1.4) +
  labs(
    x = "Standardized Coefficient (Impact Size)",
    y = ""
  ) +
  theme_minimal(base_size = 30) +
  theme(
    #plot.title  = element_text(size = 18, face = "bold", hjust = 0.5),
    axis.title  = element_text(size = 28, face = "bold"),
    axis.text   = element_text(size = 24),
    #legend.text = element_text(size = 24),
    legend.position = "none",
    legend.title= element_blank(),
    
    panel.background = element_rect(fill = "#fff3d4", colour = NA),
    plot.background = element_rect(fill = "#fff3d4", colour = NA),
    panel.grid.major = element_line(color = "grey70", size = 0.6), # grid chính
    panel.grid.minor = element_line(color = "grey85", size = 0.3))  # grid phụ
```

# 🚈 Urban Rail

## Row - The 4 value boxes {height="30%"}

### Column - peak rail ridership {width="25%"}

```{r}
#| label: peak rail ridership
#| include: false

peak_rail_ridership <- gocdata$ridership_year %>% 
  filter(year < 2020 & ridership_category == "ridership_urban.rail") %>% 
  summarise(max_ridership = max(ridership_value)) %>% 
  pull(max_ridership)
# reformat peak_bus_ridership
formatted_peak_rail <- label_number(
  accuracy = 0.1, 
  scale_cut = cut_si(""))(peak_rail_ridership)
formatted_peak_rail
```

```{r}
#| content: valuebox
#| title: "Pre-COVID peak (trips)"
list(
  icon = "graph-up-arrow",
  color = "success",
  value = formatted_peak_rail
)
```

### Column - trough rail ridership {width="25%"}

```{r}
#| label: trough rail ridership
#| include: false

min_rail_ridership <- gocdata$ridership_year %>% 
  filter(year >= 2020 & ridership_category == "ridership_urban.rail") %>% 
  summarise(min_ridership = min(ridership_value)) %>% 
  pull(min_ridership)
# reformat peak_bus_ridership
formatted_min_rail <- label_number(
  accuracy = 0.1, 
  scale_cut = cut_si(""))(min_rail_ridership)
formatted_min_rail
```

```{r}
#| content: valuebox
#| title: "The COVID trough (trips)"
list(
  icon = "graph-down-arrow",
  color = "warning",
  value = formatted_min_rail
)
```

### Column - rail percent changed {width="25%"}

```{r}
#| label: rail percent changed
#| include: false

rail_drop <- round(((peak_rail_ridership-min_rail_ridership)/peak_rail_ridership)*100,2) 
percent_rail_drop <- paste0(rail_drop,"%")
percent_rail_drop
```

```{r}
#| content: valuebox
#| title: "Drop (%)"

list(
  icon = "chevron-double-down",
  color = "primary",
  value = percent_rail_drop
)
```

### Column - rail recovery status {width="25%"}

```{r}
#| label: rail recovery status
#| include: false

rail_recovery <- gocdata$ridership_year %>% 
  filter(year==2022 & ridership_category=="ridership_urban.rail") %>% 
  summarise(rail_2022 = ridership_value) %>% 
  pull(rail_2022)
# reformat bus_recovery
formatted_rail_recovery <- label_number(
  accuracy = 0.1, 
  scale_cut = cut_si(""))(rail_recovery)
formatted_rail_recovery
```

```{r}
#| content: valuebox
#| title: "Recovery Status (2022)"

list(
  icon = "bandaid",
  color = "info",
  value = formatted_rail_recovery
)
```

## Row - 4 plots {height="70%"}

### Column - Line and point plots {width="40%"}

#### Row - line plot

```{r}
#| label: Line Plot in RAIL
#| fig-align: center
#| fig-asp: 0.33
#| fig-dpi: 300
#| fig-height: 4
#| fig-width: 12
#| out-width: 100%
#| title: Average ridership of mass transit modes

public_transit_trend
```

#### Row - point plot - RAIL

```{r}
#| label: scatter plot rail
#| fig-align: center
#| fig-asp: 0.33
#| fig-dpi: 300
#| fig-height: 4
#| fig-width: 12
#| title: "Rail Ridership & Spending correlation by Period"
ggplot(gocdata$df_trans, aes(y = `Ridership.urban_rail`, x = `Spending.mass_transit`, colour = period))+
  geom_point(size = 3)+
  scale_color_manual(values = c("before COVID" = blue,"after COVID" = red))+
  # Scale x to Million (Million)
  scale_x_continuous(labels = label_number(scale = 1e-6, suffix = "M"))+
  # Scale y axis to (Million)
  scale_y_continuous(labels = label_number(scale = 1e-6, suffix = "M"))+
  labs(#title= "Rail Ridership & Spending correlation by Period",
       x = "Spending",
       y = "Urban Rail Ridership",
       color = "Period")+
  theme_minimal()+
  theme(
    title = element_text(size =20, face = "bold"),
    axis.title  = element_text(size = 18, face = "bold"),
    axis.text   = element_text(size = 16),
    legend.text = element_text(size = 16),
    legend.title= element_blank(),
    panel.background = element_rect(fill = "#fff3d4", colour = NA),
    plot.background = element_rect(fill = "#fff3d4", colour = NA),
    panel.grid.major = element_line(color = "grey70", size = 0.6), # grid chính
    panel.grid.minor = element_line(color = "grey85", size = 0.3))  # grid phụ
```

### Column - Heatmap and Coefficient plot {width="60%"}

#### Row - For setting only {height="100%"}

##### Column - Heatmap - RAIL

```{r}
#| label: heatmap rail
#| fig-dpi: 300
#| fig-asp: 1
#| fig-bg: "#fff3d4"
#| fig-height: 12
#| fig-width: 12
#| out-width: 100%
#| out-height: 100%
#| title: "Correlation heatmap"

# set heatmap of rail
cor_rail <- cor(gocdata$df_quar_rail[ ,-1])
heatmap_rail <- ggcorrplot(cor_rail, lab = TRUE, type="lower",
                           #title = "Correlation heatmap (Urban Rail)",
                           colors = c(boldblue, "white", orange),
                          lab_size = 9)+
  theme(
        #plot.title = element_text(size = 28, face = "bold", hjust = 2, vjust = -1), 
        #axis.title = element_text(size = 18),   
        axis.text = element_text(face="bold"),
        axis.text.x = element_text(size = 24.2, angle = 45, hjust = 1, vjust = 1),  # Chỉnh nhãn trục X
        axis.text.y = element_text(size = 26), # Chỉnh nhãn trục Y
        legend.text = element_text(size = 14), # Tăng cỡ chữ của legend
        legend.position = "bottom",           # Đặt legend xuống dưới cùng
        legend.key.size = unit(1, "cm"),
                 
        panel.background = element_rect(fill = "#fff3d4", colour = NA),
        plot.background = element_rect(fill = "#fff3d4", colour = NA)
        )  # grid phụ
heatmap_rail
```

##### Column - coefficient plot - RAIL

```{r}
#| label: rail coeff plot
#| fig-asp: 1.2
#| fig-dpi: 300
#| fig-height: 10
#| fig-width: 12
#| out-width: 100%
#| title: "Influential Factors on Ridership (Pre-COVID)"

# Scale variables for RAIL
scaled_rail_data <- gocdata$df_quar_rail[ ,c(-1,-3,-4,-7)] %>%
  mutate(across(everything(), .fns = scale))

# run model again after scaling x variables
y <- lm(urban_rail~., data = scaled_rail_data)

# coefficient plot
dwplot(y,
  dot_args     = list(size = 6, alpha = 1),   # to chấm
  whisker_args = list(size = 2.5, alpha = 1),   # dày CI
  dodge_size   = 0.6                            # tách các model cho đỡ dính
  ) +
  scale_color_manual(values = blue, guide = "none") +
  geom_vline(xintercept = 0, linetype = "dashed", color = red,linewidth = 1.4) +
  labs(
    x = "Standardized Coefficient (Impact Size)",
    y = ""
  ) +
  theme_minimal(base_size = 30) +
  theme(
    #plot.title  = element_text(size = 18, face = "bold", hjust = 0.5),
    axis.title  = element_text(size = 28, face = "bold"),
    axis.text   = element_text(size = 24),
    #legend.text = element_text(size = 24),
    legend.position = "none",
    legend.title= element_blank(),
    
    panel.background = element_rect(fill = "#fff3d4", colour = NA),
    plot.background = element_rect(fill = "#fff3d4", colour = NA),
    panel.grid.major = element_line(color = "grey70", size = 0.6), # grid chính
    panel.grid.minor = element_line(color = "grey85", size = 0.3))  # grid phụ
```

# 🛥️ Other Modes

## Row - The 4 value boxes {height="30%"}

### Column - peak other ridership {width="25%"}

```{r}
#| label: peak other ridership
#| include: false

peak_other_ridership <- gocdata$ridership_year %>% 
  filter(year < 2020 & ridership_category == "ridership_other.modes") %>% 
  summarise(max_ridership = max(ridership_value)) %>% 
  pull(max_ridership)
# reformat peak_bus_ridership
formatted_peak_other <- label_number(
  accuracy = 0.1, 
  scale_cut = cut_si(""))(peak_other_ridership)
formatted_peak_other
```

```{r}
#| content: valuebox
#| title: "Pre-COVID peak (trips)"
list(
  icon = "graph-up-arrow",
  color = "success",
  value = formatted_peak_other
)
```

### Column - trough other ridership {width="25%"}

```{r}
#| label: trough other ridership
#| include: false

min_other_ridership <- gocdata$ridership_year %>% 
  filter(year >= 2020 & ridership_category == "ridership_other.modes") %>% 
  summarise(min_ridership = min(ridership_value)) %>% 
  pull(min_ridership)
# reformat peak_bus_ridership
formatted_min_other <- label_number(
  accuracy = 0.1, 
  scale_cut = cut_si(""))(min_other_ridership)
formatted_min_other
```

```{r}
#| content: valuebox
#| title: "The COVID trough (trips)"
list(
  icon = "graph-down-arrow",
  color = "warning",
  value = formatted_min_other
)
```

### Column - other percent changed {width="25%"}

```{r}
#| label: other percent changed
#| include: false

other_drop <- round(((peak_other_ridership-min_other_ridership)/peak_other_ridership)*100,2) 
percent_other_drop <- paste0(other_drop,"%")
percent_other_drop
```

```{r}
#| content: valuebox
#| title: "Drop (%)"

list(
  icon = "chevron-double-down",
  color = "primary",
  value = percent_other_drop
)
```

### Column - other recovery status {width="25%"}

```{r}
#| label: other recovery status
#| include: false

other_recovery <- gocdata$ridership_year %>% 
  filter(year==2022 & ridership_category=="ridership_other.modes") %>% 
  summarise(other_2022 = ridership_value) %>% 
  pull(other_2022)
# reformat bus_recovery
formatted_other_recovery <- label_number(
  accuracy = 0.1, 
  scale_cut = cut_si(""))(other_recovery)
formatted_other_recovery
```

```{r}
#| content: valuebox
#| title: "Recovery Status (2022)"

list(
  icon = "bandaid",
  color = "info",
  value = formatted_other_recovery
)
```

## Row - 4 plots {height="70%"}

### Column - Line and point plots {width="40%"}

#### Row - line plot

```{r}
#| fig-width: 12
#| fig-height: 4
#| fig-dpi: 300
#| fig-asp: 0.33
#| fig-align: center
#| title: "Average ridership of mass transit modes"
#| out-width: "100%"

public_transit_trend
```

#### Row - point plot - Other MODES

```{r}
#| fig-width: 12
#| fig-height: 4
#| fig-dpi: 300
#| fig-asp: 0.33
#| fig-align: center
#| title: "Other modes Ridership & Spending correlation by Period"

ggplot(gocdata$df_trans, aes(y = `Ridership.other_modes`, x = `Spending.mass_transit`, colour = period))+
  geom_point(size = 3)+
  scale_color_manual(values = c("before COVID" = blue,"after COVID" = red))+
  # Scale x to Million (Million)
  scale_x_continuous(labels = label_number(scale = 1e-6, suffix = "M"))+
  # Scale y axis to (Million)
  scale_y_continuous(labels = label_number(scale = 1e-6, suffix = "M"))+
  labs(#title= "Other modes Ridership & Spending correlation by Period",
       x = "Spending",
       y = "Other modes Ridership",
       color = "Period")+
  theme_minimal()+
  theme(
    title = element_text(size =20, face = "bold"),
    axis.title  = element_text(size = 18, face = "bold"),
    axis.text   = element_text(size = 16),
    legend.text = element_text(size = 16),
    legend.title= element_blank(),
    panel.background = element_rect(fill = "#fff3d4", colour = NA),
    plot.background = element_rect(fill = "#fff3d4", colour = NA),
    panel.grid.major = element_line(color = "grey70", size = 0.6), # grid chính
    panel.grid.minor = element_line(color = "grey85", size = 0.3))  # grid phụ
```

### Column - Heatmap and Coefficient plot {width="60%"}

#### Row - For setting only {height="100%"}

##### Column - Heatmap - Other MODES

```{r}
#| fig-dpi: 300
#| fig-asp: 1
#| fig-bg: "#fff3d4"
#| fig-height: 12
#| fig-width: 12
#| out-width: 100%
#| out-height: 100%
#| title: "Correlation heatmap"

# set heatmap of other
cor_other <- cor(gocdata$df_quar_other[ ,-1])
heatmap_other <- ggcorrplot(cor_other,lab = TRUE, 
                            type="lower",
                            #title = "Correlation heatmap (Other modes)",
                            colors = c(boldblue, "white", orange),
                          lab_size = 9)+
  theme(
        #plot.title = element_text(size = 28, face = "bold", hjust = 2, vjust = -1), 
        #axis.title = element_text(size = 18),   
        axis.text = element_text(face="bold"),
        axis.text.x = element_text(size = 24.2, angle = 45, hjust = 1, vjust = 1),  # Chỉnh nhãn trục X
        axis.text.y = element_text(size = 26), # Chỉnh nhãn trục Y
        legend.text = element_text(size = 14), # Tăng cỡ chữ của legend
        legend.position = "bottom",           # Đặt legend xuống dưới cùng
        legend.key.size = unit(1, "cm"),
                 
        panel.background = element_rect(fill = "#fff3d4", colour = NA),
        plot.background = element_rect(fill = "#fff3d4", colour = NA)
        )  # grid phụ

heatmap_other
```

##### Column - coefficient plot - Other MODES

```{r}
#| label: coef plot of Other
#| fig-asp: 1.2
#| fig-dpi: 300
#| fig-height: 10
#| fig-width: 12
#| out-width: 100%
#| title: Influential Factors on Ridership (Pre-COVID)

# Scale variables for OTHER
scaled_other_data <- gocdata$df_quar_other[ ,-1] %>%
  mutate(across(everything(), .fns = scale))

# run model again after scaling x variables
z <- lm(other_modes~., data = scaled_other_data)

# coefficient plot
dwplot(z,
  dot_args     = list(size = 6, alpha = 1),   # to chấm
  whisker_args = list(size = 2.5, alpha = 1),   # dày CI
  dodge_size   = 0.6                            # tách các model cho đỡ dính
  ) +
  scale_color_manual(values = red, guide = "none") +
  geom_vline(xintercept = 0, linetype = "dashed", color = green,linewidth = 1.4) +
  labs(
    x = "Standardized Coefficient (Impact Size)",
    y = ""
  ) +
  theme_minimal(base_size = 30) +
  theme(
    #plot.title  = element_text(size = 18, face = "bold", hjust = 0.5),
    axis.title  = element_text(size = 28, face = "bold"),
    axis.text   = element_text(size = 24),
    #legend.text = element_text(size = 24),
    legend.position = "none",
    legend.title= element_blank(),
    
    panel.background = element_rect(fill = "#fff3d4", colour = NA),
    plot.background = element_rect(fill = "#fff3d4", colour = NA),
    panel.grid.major = element_line(color = "grey70", size = 0.6), # grid chính
    panel.grid.minor = element_line(color = "grey85", size = 0.3))  # grid phụ
```